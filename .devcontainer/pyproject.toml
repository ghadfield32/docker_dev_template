[project]
name = "docker_dev_template"
version = "0.1.0"
description = "Pytorch and Jax GPU docker container"
authors = [{ name = "Geoffrey Hadfield" }]
license = "MIT"
readme = "README.md"

# Python versions (host + container)
requires-python = ">=3.10,<3.13"

dependencies = [
  "pandas>=1.2.0",
  "numpy>=1.20.0",
  "matplotlib>=3.4.0",
  "mlflow>=2.10.2",
  "mlflow-skinny>=2.10.2",
  "scikit-learn>=1.4.2",
  "pymc>=5.0.0",
  "arviz>=0.14.0",
  "statsmodels>=0.13.0",
  "jupyterlab>=3.0.0",
  "seaborn>=0.11.0",
  "tabulate>=0.9.0",
  "shap>=0.40.0",
  "xgboost>=1.5.0",
  "lightgbm>=3.3.0",
  "catboost>=1.2.8,<1.3.0",
  "scipy>=1.7.0",
  "shapash[report]>=2.3.0",
  "shapiq>=0.1.0",
  "explainerdashboard==0.5.1",
  "ipywidgets>=8.0.0",
  "nutpie>=0.7.1",
  "numpyro>=0.18.0,<1.0.0",
  "pytensor>=2.18.3",
  "aesara>=2.9.4",
  "tqdm>=4.66.5",
  "pyarrow>=12.0.0",
  "optuna>=3.0.0",
  "optuna-integration[mlflow]>=0.2.0",
  "omegaconf>=2.3.0,<2.4.0",
  "hydra-core>=1.3.2,<1.4.0",
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "pydantic>=2.0.0",
  "pydantic-settings",
  "kagglehub[pandas-datasets]>=0.3.12,<0.4.0",
  "duckdb~=1.3.2",           # latest stable Python client as of Aug 22, 2025
]

[project.optional-dependencies]
# Developer tooling, safe everywhere
dev = [
  "pytest>=7.0.0",
  "black>=23.0.0",
  "isort>=5.0.0",
  "flake8>=5.0.0",
  "mypy>=1.0.0",
  "invoke>=2.2",
]

# Optional: CUDA-12.x tools like CuPy are Linux-only; leave off by default
cuda = [
  # Install explicitly inside container if you truly need it:
  # "cupy-cuda12x>=12.0.0 ; platform_system == 'Linux'",
]

# GPU frameworks are *disabled by default* and only used on Linux
linux-gpu = [
  # IMPORTANT:
  # 1) We do NOT hard-pin nightly day slices here. We allow pre-releases at sync time.
  # 2) We add Linux markers to avoid Windows resolution failures.
  "torch      ; platform_system == 'Linux'",
  "torchvision; platform_system == 'Linux'",
  "torchaudio ; platform_system == 'Linux'",

  # JAX CUDA-only wheels are Linux-only
  "jax[cuda12-local]>=0.4.26 ; platform_system == 'Linux'",
]

memory-management = [
  "psutil>=5.9.0",
  "memory-profiler>=0.61.0",
]

# --- Removed the global [tool.uv.index]/[tool.uv.sources] block ---
# We will pass PyTorch nightly indexes during container build or `uv sync` in Linux only.

[tool.pytensor]
device = "cuda"
floatX = "float32"
allow_gc = true
optimizer = "fast_run"

[tool.uv]
compile-bytecode = true
link-mode = "copy"
python-downloads = "never"
# Tip: weâ€™ll supply `--prerelease=allow` and `--index-strategy unsafe-best-match`
# only in the Linux container where we actually want nightlies.

