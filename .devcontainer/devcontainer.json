{
  "name": "docker_dev_template_uv",
  "dockerComposeFile": ["../docker-compose.yml"],
  "service": "datascience",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",
  "initializeCommand": ".devcontainer/generate-project-name.sh",
  "runArgs": [
    "--gpus", "all",
    "--env-file", "${localWorkspaceFolder}/.devcontainer/.env.runtime"
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-renderers"
      ],
      "settings": {
        // 1. COMPREHENSIVE TELEMETRY SETTINGS
        "telemetry.telemetryLevel": "off",
        "python.telemetry.enabled": false,
        "jupyter.telemetry.enabled": false,
        "jupyter.experiments.enabled": false,
        "update.mode": "manual",
        "extensions.autoUpdate": false,
        "extensions.autoCheckUpdates": false,

        // 2. MOVE HEAVY EXTENSIONS TO LOCAL UI HOST
        "remote.extensionKind": {
          "ms-python.python": ["ui"],
          "ms-python.vscode-pylance": ["ui"],
          "ms-toolsai.jupyter": ["ui"],
          "ms-toolsai.jupyter-renderers": ["ui"]
        },

        // 3. PYTHON AND JUPYTER SETTINGS
        "python.defaultInterpreterPath": "/workspace/.venv/bin/python",
        "jupyter.interactiveWindow.textEditor.executeSelection": true,
        "jupyter.widgetScriptSources": ["jsdelivr.com", "unpkg.com"],

        // 4. LINE ENDING SETTINGS
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimFinalNewlines": true,
        "files.trimTrailingWhitespace": true
      }
    }
  },
  "remoteEnv": {
    "JUPYTER_ENABLE_LAB": "true"
  },
  "remoteUser": "root",

  // After container creation, set up env, check UV, Python, and key libs
  "postCreateCommand": [
    "/bin/bash",
    "-c",
    "find /workspace -type f \\( -name '*.sh' -o -name '*.py' \\) -exec dos2unix {} \\; 2>/dev/null || true && find /workspace -type f -name '*.sh' -exec chmod +x {} \\; && .devcontainer/setup_env.sh && echo '## uv diagnostics ##' && uv --version && echo '## python ##' && which python && python -V && python - <<'PY'\nimport encodings, jupyterlab, torch, jax, sys, os\nprint('游릭 encodings OK', sys.executable)\nprint('游릭 jupyterlab OK')\nprint('游릭 torch', torch.__version__, 'CUDA:', torch.cuda.is_available())\nprint('游릭 jax', jax.__version__, 'devices:', jax.devices())\nPY"
  ]
}
